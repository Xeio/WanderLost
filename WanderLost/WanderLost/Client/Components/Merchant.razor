<div class="merchant @ClassName">

    @if (MainMerchant is not null)
    {
        @if (SecondaryMerchant is not null)
        {
            <div class="merchant__deck" @onclick="ShowOverlay">
                @if (TetriraryMerchant is not null)
                {
                    <Card ClassName="merchant__card merchant__card--tetriary" Merchant="@TetriraryMerchant" Server="@Server" Region="@Region" />
                }
                <Card ClassName="merchant__card merchant__card--secondary" Merchant="@SecondaryMerchant" Server="@Server" Region="@Region" />
            </div>
        }
        <Card ClassName="merchant__card" Merchant="@MainMerchant" Server="@Server" Region="@Region" OnLocationClick="@ShowMap" />
    }
    else
    {
        <EmptyCard MerchantName="@MerchantGroup.MerchantName" Server="@Server" Region="@Region" />
    }
</div>

@code {
    [CascadingParameter(Name = "Overlay")]
    public IOverlay Overlay { get; init; } = default!;

    [Parameter, EditorRequired]
    public ActiveMerchantGroup MerchantGroup { get; set; } = default!;

    [Parameter, EditorRequired]
    public string Server { get; set; } = default!;

    [Parameter]
    public string? ClassName { get; set; }

    public string Region
    {
        get
        {
            return MerchantGroup.MerchantData.Region;
        }
    }

    public ActiveMerchant? MainMerchant
    {
        get
        {
            return MerchantGroup.ActiveMerchants.OrderByDescending(x => x.Votes).FirstOrDefault();
        }
    }

    public ActiveMerchant? SecondaryMerchant
    {
        get
        {
            return MerchantGroup.ActiveMerchants.OrderByDescending(x => x.Votes).Skip(1).FirstOrDefault();
        }
    }

    public ActiveMerchant? TetriraryMerchant
    {
        get
        {
            return MerchantGroup.ActiveMerchants.OrderByDescending(x => x.Votes).Skip(2).FirstOrDefault();
        }
    }

    public async Task ShowOverlay()
    {
        await Overlay.ShowMerchantGroup(MerchantGroup, Server, Region);
    }

    public async Task ShowMap(string zone)
    {
        await Overlay.ShowMap(zone);
    }
}
<button class="button_suggest" onclick="window.location.href = '/UpdateMerchant/@Server/@MerchantGroup.MerchantName'">Suggest a different merchant</button>
<div class="merchant">
  @if(!hasMerchants)
  {
    <a href="/UpdateMerchant/@Server/@MerchantGroup.MerchantName">Submit Location</a>
  }
  else
  {
    @if (SecondaryMerchant != null)
    {
        <div class="merchant__deck">
        @if (TetriraryMerchant != null)
        {
          <Card ClassName="merchant__card merchant__card--tetriary" Merchant="@TetriraryMerchant" Server="@Server" Votes="@Votes"/>
        }
        <Card ClassName="merchant__card merchant__card--secondary" Merchant="@SecondaryMerchant" Server="@Server" Votes="@Votes" />
        </div>
    }
    @if (MainMerchant != null)
    {
      <Card ClassName="merchant__card" Merchant="@MainMerchant" Server="@Server" Votes="@Votes" />
    }
    else
    {
      <div>No merchant present</div>
    }
  }
</div>

@code {
  [Parameter, EditorRequired]
  public ActiveMerchantGroup MerchantGroup { get; set; } = default!;

  [Parameter, EditorRequired]
  public string Server { get; set; } = default!;

  [Parameter, EditorRequired]
  public Dictionary<Guid, VoteType> Votes { get; set; } = default!;

  public bool hasMerchants
  {
    get
    {
      return MerchantGroup.ActiveMerchants.Count > 0;
    }
  }

  public ActiveMerchant? MainMerchant
  {
    get
    {
      return MerchantGroup.ActiveMerchants.OrderByDescending(x => x.Votes).FirstOrDefault();
    }
  }

  public ActiveMerchant? SecondaryMerchant
  {
    get
    {
      return MerchantGroup.ActiveMerchants.OrderByDescending(x => x.Votes).Skip(1).FirstOrDefault();
    }
  }

  public ActiveMerchant? TetriraryMerchant
  {
    get
    {
      return MerchantGroup.ActiveMerchants.OrderByDescending(x => x.Votes).Skip(2).FirstOrDefault();
    }
  }

}
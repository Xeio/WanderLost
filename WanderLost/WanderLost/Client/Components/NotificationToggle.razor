
@using Blazored.LocalStorage
@inject ClientSettingsController ClientSettings
@inject ClientNotificationService Notifications
@inject ILocalStorageService LocalStorage

<div class="d-flex p-1 border rounded cursor-pointer" @onclick="OnNotificationToggleClicked">
    <span>Merchant notifications: </span>
    <div >
        @if (ClientSettings.NotificationsEnabled)
        {
            <span class="text-success mx-1">
                <span>on</span>
                <span class="oi oi-circle-check"></span>
            </span>

        }
        else
        {
            <span class="text-danger mx-1">
                <span>off</span>
                <span class="oi oi-ban"></span>
            </span>
        }
    </div>
</div>

@code {
    [Parameter] public EventCallback<bool> NotificationStateChanged { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await Notifications.Init();
        await ClientSettings.Init();

        await base.OnInitializedAsync();
    }

    private async Task OnNotificationToggleClicked()
    {
        var oldValue = ClientSettings.NotificationsEnabled;
        if (!oldValue)
        {
            if (await Notifications.IsSupportedByBrowser() && await Notifications.RequestPermission())
            {
                await ClientSettings.SetNotificationsEnabled(true);
                await NotificationStateChanged.InvokeAsync();
            }
        }
        else
        {
            await ClientSettings.SetNotificationsEnabled(false);
            await NotificationStateChanged.InvokeAsync();
        }
        StateHasChanged();
    }
}

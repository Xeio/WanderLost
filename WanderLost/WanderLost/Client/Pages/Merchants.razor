@page "/"

<PageTitle>Lost Merchants</PageTitle>

@if (ClientSettings.NotificationsEnabled && ClientSettings.NotifyBrowserSoundEnabled)
{
    <BrowserSoundDisabledPopup/>
}

<MessageOfTheDay/>

@if (HubClient.HubConnection.State == Microsoft.AspNetCore.SignalR.Client.HubConnectionState.Disconnected)
{
    <div class="alert alert-danger">
        Disconnected from server. <a href="" class="alert-link" @onclick="@(() => { NavigationManager.NavigateTo("", true); })">Try to Reload.</a>
    </div>
}
else if (HubClient.HubConnection.State == Microsoft.AspNetCore.SignalR.Client.HubConnectionState.Reconnecting)
{
    <div class="alert alert-warning">
        Disconnected from server, automatically attempting to reconnect... <a href="" class="alert-link" @onclick="@(() => { NavigationManager.NavigateTo("", true); })">Or you can try to reload.</a>
    </div>
}

<div class="row">
    <div class="col-4">
        <label for="severRegion">Server Region: </label>
        <select class="form-select" id="severRegion" @bind="@ServerRegion">
            <option></option>
            @foreach (var datacenter in StaticData.ServerRegions)
            {
                <option value="@datacenter.Key">@datacenter.Value.Name</option>
            }
        </select>
    </div>

    <div class="col-4">
        <label class="control-label" for="server">Server: </label>
        <select class="form-select" id="server" @bind="@Server">
            <option></option>
            @if (!string.IsNullOrWhiteSpace(ServerRegion))
            {
                @foreach (var datacenter in StaticData.ServerRegions[ServerRegion].Servers ?? Enumerable.Empty<string>())
                {
                    <option>@datacenter</option>
                }
            }
        </select>
    </div>
    @if (!string.IsNullOrWhiteSpace(Server))
    {
        <div class="col d-flex justify-content-end mt-auto">
            <NotificationToggle />
        </div>
    }
</div>

@if(string.IsNullOrWhiteSpace(ServerRegion) || string.IsNullOrWhiteSpace(Server))
{
    <h3 class="mt-3">Select a Server</h3>
}
else if(ActiveData.MerchantGroups.Count > 0)
{
    @if(ActiveData.MerchantGroups.Any(m => m.IsActive))
    {
        <h3 class="mt-3">Active Merchants</h3>
        <ActiveMerchantsGrid Server="@Server" ActiveData="@ActiveData" ActiveOnly="true" />
    }
    <h3 class="mt-3">Upcoming Merchants</h3>
    <ActiveMerchantsGrid ActiveData="@ActiveData" Server="@Server" />
}

@page "/Notifications"

<div class="d-flex justify-content-between">
    <h1>Notification settings</h1>
    @if (!string.IsNullOrWhiteSpace(ClientSettings.Server))
    {
        <NotificationToggle NotificationStateChanged="@StateHasChanged" />
    }
</div>

@if (!ClientSettings.NotificationsEnabled)
{
    <p><span class="oi oi-ban text-danger mx-2"></span>Notifications disabled.</p>
}
else
{
    <p class="text-nowrap">Edit notification alarms. Click on <NotificationIcon Enabled="true" />/<NotificationIcon Enabled="false" /> to disable/enable notifications for an item.</p>
    <div class="container mx-1">
        <div class="row my-2">
            <div class="form-check col-6">
                <input class="form-check-input" type="checkbox" checked="@ClientSettings.NotifyMerchantAppearance" id="merchantSpawn" @onclick="@ToggleNotifyAppearance">
                <label class="form-check-label" for="merchantSpawn">
                    Notify when selected merchants have spawned
                </label>
            </div>
            <button class="btn btn-dark col-auto" @onclick="OnTestMerchantSpawnClicked">Test merchant spawn notification</button>
        </div>
        <div class="row my-2">
            <div class="form-check col-6">
                <input class="form-check-input" type="checkbox" id="merchantFound" checked disabled>
                <label class="form-check-label" for="merchantFound">
                    Notify when selected items appear
                </label>
            </div>
            <button class="btn btn-dark col-auto" @onclick="OnTestMerchantFoundClicked">Test item found notification</button>
        </div>
        <div class="row my-2">
            <div class="form-check col-6">
                <input class="form-check-input" type="checkbox" checked="@ClientSettings.NotifyBrowserSoundEnabled" id="browserSound" @onclick="@ToggleNotifyBrowserSoundEnabled">
                <label class="form-check-label" for="browserSound">
                    Play additional notification sound in browser
                </label>
            </div>
        </div>
        <div class="row my-2">
            <div class="form-check col-6">
                <input class="form-check-input" type="checkbox" checked="@ClientSettings.NotifyLegendaryRapport" id="legendaryRapport" @onclick="@ToggleNotifyLegendaryRapport">
                <label class="form-check-label" for="legendaryRapport">
                    Notify when a <ItemDisplay Item="@(new Item(){ Name="Legendary", Rarity= Rarity.Legendary})" /> rapport item is available
                </label>
            </div>
        </div>
    </div>
    <div class="d-flex overflow-hidden flex-wrap">
        @foreach (var merchant in StaticData.Merchants)
        {
            <div class="card" style="width: 20rem;">
                <div class="card-header">
                    <NotificationIcon Enabled="IsMerchantNotified(merchant.Key)" StateChanged="@(_ => OnNotificationToggle(NotificationSettingType.Merchant, merchant.Key, merchant.Key))" />
                    @merchant.Key
                </div>
                <ul class="list-group list-group-flush">
                    <li class="list-group-item" style="min-height: 137px;">
                        <h6 class="card-subtitle mb-2 text-muted">Cards</h6>
                        <ul>
                            @foreach (var item in merchant.Value.Cards)
                            {
                                <li class="d-block">
                                    <NotificationIcon Enabled="IsMerchantValueNotified(merchant.Key, NotificationSettingType.Card, item)" StateChanged="@(_ => OnNotificationToggle(NotificationSettingType.Card, merchant.Key, item))" />
                                    <ItemDisplay Item="@item" />
                                </li>
                            }
                        </ul>
                    </li>
                </ul>
            </div>
        }
    </div>
}
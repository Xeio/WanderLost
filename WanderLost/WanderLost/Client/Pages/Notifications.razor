@page "/notifications"

<h1>Notification settings</h1>
@if (!string.IsNullOrWhiteSpace(ClientSettings.Server))
{
    <div class="d-flex justify-content-end">
        <NotificationToggle NotificationStateChanged="@StateHasChanged" />
    </div>
}

@if (!ClientSettings.NotificationsEnabled)
{
    <p><span class="oi oi-ban text-danger mx-2"></span>Notifications disabled.</p>
}
else
{
    <p class="text-nowrap">Edit notification alarms. Click on <NotificationIcon Enabled="true" />/<NotificationIcon Enabled="false" /> to disable/enable notifications for an item.</p>
    <div class="d-flex">
        <div class="d-flex">
            <div class="form-check my-auto">
                <input class="form-check-input" type="checkbox" value="" id="merchantSpawn" @onclick="@ToggleNotifyAppearance">
                <label class="form-check-label" for="merchantSpawn">
                    Notify merchant spawn
                </label>
            </div>
            <button class="btn btn-dark mx-2" disabled="@(!ClientSettings.NotifyMerchantAppearance)" @onclick="OnTestMerchantSpawnClicked">Test Merchant <span class="text-warning">appeared</span></button>
        </div>
        <div class="d-flex mx-2">
            <div class="form-check my-auto">
                <input class="form-check-input" type="checkbox" value="" id="merchantFound" checked disabled>
                <label class="form-check-label" for="merchantFound">
                    Notify merchant found
                </label>
            </div>
            <button class="btn btn-dark mx-2" @onclick="OnTestMerchantFoundClicked">Test Merchant <span class="text-danger">found</span></button>
        </div>
    </div>
    <div class="d-flex overflow-hidden flex-wrap">
        @foreach (var merchant in StaticData.Merchants)
        {
            <div class="card" style="width: 20rem;">
                <div class="card-header">
                    <NotificationIcon Enabled="IsMerchantNotified(merchant.Key)" StateChanged="@(x => OnNotificationToggle(x, NotificationSettingType.Merchant, merchant.Key, merchant.Key))" />
                    @merchant.Key
                </div>
                <ul class="list-group list-group-flush">
                    <li class="list-group-item" style="min-height: 137px;">
                        <h6 class="card-subtitle mb-2 text-muted">Cards</h6>
                        <ul>
                            @foreach (var item in merchant.Value.Cards)
                            {
                                <li class="d-block">
                                    <NotificationIcon Enabled="IsMerchantValueNotified(merchant.Key, NotificationSettingType.Card, item)" StateChanged="@(x => OnNotificationToggle(x, NotificationSettingType.Card, merchant.Key, item))" />
                                    <ItemDisplay Item="@item" />
                                </li>
                            }
                        </ul>
                    </li>
                    <li class="list-group-item">
                        <h6 class="card-subtitle mb-2 text-muted">Rapport</h6>
                        <ul>
                            <li class="d-block">
                                <span class="oi oi-volume-off mx-2 text-secondary"></span>
                                soon™
                            </li>
                        </ul>
                    </li>
                </ul>
            </div>
        }
    </div>
}